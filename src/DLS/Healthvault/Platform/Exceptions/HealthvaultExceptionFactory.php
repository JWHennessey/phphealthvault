<?php
namespace DLS\Healthvault\Platform\Exceptions;

class HealthvaultExceptionFactory{

    static private $EXCEPTION_CODES = array(
        1=>array("Generic failure due to unknown causes or internal error.","FAILED"),
        2=>array("Http protocol problem.","BAD_HTTP"),
        3=>array("Request xml cannot be parsed or nonconformant.","INVALID_XML"),
        4=>array("Signature validation failed.","BAD_SIG"),
        5=>array("No such method.","BAD_METHOD"),
        6=>array("App does not exist app is invalid app is not active or calling IP is invalid.","INVALID_APP"),
        7=>array("Credntial token has expired need a new one.","CREDENTIAL_TOKEN_EXPIRED"),
        8=>array("Auth token malformed or otherwise busted.","INVALID_TOKEN"),
        9=>array("Person does not exist or is not active.","INVALID_PERSON"),
        10=>array("Given record id does not exist.","INVALID_RECORD"),
        11=>array("Person or app does not have sufficient rights.","ACCESS_DENIED"),
        12=>array("The functionality being accessed is not yet implemented.","NYI"),
        13=>array("invalid thing identifier.","INVALID_THING"),
        14=>array("Data table already exists with incompatible units.","CANT_CONVERT_UNITS"),
        15=>array("Missing or invalid GetThingsFilter.","INVALID_FILTER"),
        16=>array("Missing or invalid GetThings format specifier.","INVALID_FORMAT"),
        17=>array("A credential was supplied without a shared secret.","MISSING_SHARED_SECRET"),
        18=>array("authorized_applications entry missing.","INVALID_APPAUTH"),
        19=>array("Thing type doesn't exist.","INVALID_THING_TYPE"),
        20=>array("Can't update things of this type.","THING_TYPE_IMMUTABLE"),
        21=>array("Can't create things of this type.","THING_TYPE_UNCREATABLE"),
        22=>array("Duplicate Credential found.","DUPLICATE_CREDENTIAL_FOUND"),
        23=>array("Invalid Record name.","INVALID_RECORD_NAME"),
        24=>array("Cannot find the drug specified.","DRUG_NOT_FOUND"),
        25=>array("Invalid person state.","INVALID_PERSON_STATE"),
        26=>array("Requested code set was not found.","INVALID_CODESET"),
        28=>array("Invalid validation token for contact email validation.","INVALID_VALIDATION_TOKEN"),
        30=>array("Invalid contact email.","INVALID_CONTACT_EMAIL"),
        31=>array("Invalid login name.","INVALID_LOGIN_NAME"),
        32=>array("Invalid password.","INVALID_PASSWORD"),
        33=>array("Open query id not found.","INVALID_OPENQUERY"),
        34=>array("Transform cannot be loaded.","INVALID_TRANSFORM"),
        35=>array("Invalid relationship type.","INVALID_RELATIONSHIP_TYPE"),
        36=>array("Invalid credential type.","INVALID_CREDENTIAL_TYPE"),
        37=>array("Invalid record state.","INVALID_RECORD_STATE"),
        38=>array("Application authorization is not required for this app.","APP_AUTH_NOT_REQUIRED"),
        39=>array("The request provided has exceeded maximum allowed request length.","REQUEST_TOO_LONG"),
        40=>array("Duplicate authorized record found.","DUPLICATE_AUTHORIZED_RECORD_FOUND"),
        41=>array("Person email must be validated but it's not.","EMAIL_NOT_VALIDATED"),
        45=>array("The email address specified to SendInsecureMessage is malformed.","MAIL_ADDRESS_MALFORMED"),
        46=>array("The password does not meet the complexity requirements.","PASSWORD_NOT_STRONG"),
        47=>array("The last custodian for a record cannot be removed.","CANNOT_REMOVE_LAST_CUSTODIAN"),
        48=>array("The email address is invalid.","INVALID_EMAIL_ADDRESS"),
        49=>array("The request sent to HealthVault reached its time to live and is now too old to be processed.","REQUEST_TIMED_OUT"),
        50=>array("The sponsor email address is invalid.","INVALID_SPONSOR_EMAIL"),
        51=>array("Promotion token is invalid.","INVALID_PROMOTION_TOKEN"),
        52=>array("Record authorization token is invalid.","INVALID_RECORD_AUTHORIZATION_TOKEN"),
        53=>array("GetThings Query has too many request groups.","TOO_MANY_GROUPS_IN_QUERY"),
        54=>array("The permissions to be granted exceed the default permissions available to be granted. e.g.attempt to grant all access when only read acce"),
        55=>array("Requested vocabulary was not found.","INVALID_VOCABULARY"),
        56=>array("An application with the same ID already exists.","DUPLICATE_APPLICATION_FOUND"),
        57=>array("Record authorization token has expired.","RECORD_AUTHORIZATION_TOKEN_EXPIRED"),
        58=>array("Record authorization does not exist.","RECORD_AUTHORIZATION_DOES_NOT_EXIST"),
        59=>array("Can't delete things of this type.","THING_TYPE_UNDELETABLE"),
        60=>array("Version stamp is missing.","VERSION_STAMP_MISSING"),
        61=>array("Version stamp mismatch.","VERSION_STAMP_MISMATCH"),
        62=>array("Requested open query has expired.","EXPIRED_OPENQUERY"),
        63=>array("Public key is invalid.","INVALID_PUBLIC_KEY"),
        64=>array("The application's domain name hasn't been set.","DOMAIN_NAME_NOT_SET"),
        65=>array("Authenticated session token has expired need a new one.","AUTHENTICATED_SESSION_TOKEN_EXPIRED"),
        66=>array("The credential key was not found.","INVALID_CREDENTIAL_KEY"),
        67=>array("Pseudo id for person not valid.","INVALID_PERSON_ID"),
        68=>array("The size occupied by the things in the put things request will cause the record to exceed the size quota alloted to it.","RECORD_QUOTA_EXCEEDED"),
        69=>array("The DateTime supplied is invalid (exceeds the bounds for the DateTime).","INVALID_DATETIME"),
        70=>array("Certificate validation failed.","BAD_CERT"),
        71=>array("The response has exceeded maximum allowed size.","RESPONSE_TOO_LONG"),
        72=>array("Verification question for connect request invalid.","INVALID_VERIFICATION_QUESTION"),
        73=>array("The verification answer for the connect request is invalid.","INVALID_VERIFICATION_ANSWER"),
        74=>array("There is no connect request corresponding to the given code.","INVALID_IDENTITY_CODE"),
        75=>array("Maximum number of retries has been exceeded.","RETRY_LIMIT_EXCEEDED"),
        76=>array("Request header culture not supported.","CULTURE_NOT_SUPPORTED"),
        77=>array("The file extension is not supported.","INVALID_FILE_EXTENSION"),
        78=>array("The vocabulary item does not exist.","INVALID_VOCABULARY_ITEM"),
        79=>array("Duplicate connect request found.","DUPLICATE_CONNECT_REQUEST_FOUND"),
        80=>array("The account type specified is invalid.","INVALID_SPECIAL_ACCOUNT_TYPE"),
        81=>array("A type with the specified identifier already exists.","DUPLICATE_TYPE_FOUND"),
        82=>array("Credential not found.","CREDENTIAL_NOT_FOUND"),
        83=>array("Attempt to delete last credential associated with an account.","CANNOT_REMOVE_LAST_CREDENTIAL"),
        84=>array("The connect request has been previously authorized.","CONNECT_REQUEST_ALREADY_AUTHORIZED"),
        85=>array("The type specified to update an instance of a thing is an older version of the type than the existing instance.","INVALID_THING_TYPE_VERSION"),
        86=>array("The maximum number of allowed credentials has been exceeded.","CREDENTIALS_LIMIT_EXCEEDED"),
        87=>array("One or more invalid methods were specified in the method mask.","INVALID_METHOD"),
        88=>array("The blob reference url supplied for the blob streaming API is invalid.","INVALID_BLOB_REF_URL"),
        89=>array("Other data put in to Healthvault via the streaming API cannot be requested as an other data string.","CANNOT_GET_STREAMED_OTHER_DATA"),
        90=>array("The type version of the thing cannot be changed without a data xml supplied for validation.","UPDATE_THING_TYPE_VERSION_NO_DATA_XML"),
        91=>array("The content encoding specified for the blob is not supported.","UNSUPPORTED_CONTENT_ENCODING"),
        92=>array("The content encoding specified for the blob does not match the blob data.","CONTENT_ENCODING_DATA_MISMATCH"),
        93=>array("The user exceeded the maximum number of applications allowed.","APPLICATION_LIMIT_EXCEEDED"),
        94=>array("The specified binary content identifier was not found.","INVALID_BINARY_CONTENT_ID"),
        95=>array("The connect request was found but does not yet have any contents.","CONNECT_REQUEST_INCOMPLETE"),
        96=>array("The connect package has already been fully created and populated.","CONNECT_PACKAGE_EXISTS"),
        97=>array("The file name is not supported.","INVALID_FILE_NAME"),
        98=>array("The signup code is invalid.","INVALID_SIGNUP_CODE"),
        99=>array("The blob is too large and cannot be returned inline.","BLOB_SIZE_TOO_LARGE_FOR_INLINE"),
        100=>array("A blob of this name is already present in the request.","DUPLICATE_BLOB"),
        101=>array("The blob token corresponds to a blob that is already committed.","BLOB_TOKEN_COMMITTED"),
        102=>array("The blob token corresponds to a blob that was not marked completed through the streaming interface.","BLOB_TOKEN_NOT_COMPLETED"),
        104=>array("The thing being updated has data items that cannot be seen in this version."," e.g. signatures with new signature methods or multiple"),
        105=>array("The signature algorithm is not valid.","INVALID_SIGNATURE_ALGORITHM"),
        106=>array("The blob hash algorithm is invalid or not supported.","INVALID_BLOB_HASH_ALGORITHM"),
        107=>array("The blob hash block size is unsupported.","UNSUPPORTED_BLOB_HASH_BLOCK_SIZE"),
        108=>array("The specified blob hash algorithm does not match the blob's hash algorithm.","BLOB_HASH_ALGORITHM_MISMATCH"),
        109=>array("The specified blob hash block size does not match the blob's hash block size.","BLOB_HASH_BLOCK_SIZE_MISMATCH"),
        110=>array("The signature method is not supported in the context it is being used.","UNSUPPORTED_SIGNATURE_METHOD"),
        111=>array("The specified blob hash is invalid.","INVALID_BLOB_HASH"),
        112=>array("The blob is associated with a connect package that is not yet created.","PACKAGE_BLOB_NOT_COMMITTED"),
        113=>array("Changing the application state from deleted is not supported.","APPLICATION_STATE_TRANSITION_NOT_SUPPORTED"),
        120=>array("The contents of the connect package are not valid xml.","INVALID_PACKAGE_CONTENTS"),
        121=>array("The content type is not supported.","INVALID_CONTENT_TYPE"),
        122=>array("The contents of the connect package must be validated before they are put into a health record.","CONNECT_PACKAGE_VALIDATION_REQUIRED"),
        123=>array("Invalid thing state.","INVALID_THING_STATE"),
        124=>array("The maximum number of things specified has been exceeded.","TOO_MANY_THINGS_SPECIFIED"),
        126=>array("The directory item passed in is invalid.","INVALID_DIRECTORY_ITEM"),
        129=>array("The vocbulary authorization is invalid.","INVALID_VOCABULARY_AUTHORIZATION"),
        130=>array("Access to the requested vocabulary is denied.","VOCABULARY_ACCESS_DENIED"),
        131=>array("The personal flag is not supported with this type.","UNSUPPORTED_PERSONAL_FLAG"),
        132=>array("The requested subscription was not found.","SUBSCRIPTION_NOT_FOUND "),
        133=>array("The number of subscriptions for the application was exceeded.","SUBSCRIPTION_LIMIT_EXCEEDED "),
        134=>array("The subscription contains invalid data.","SUBSCRIPTION_INVALID")
    );

    public static function build($code){

        $exception_description = self::$EXCEPTION_CODES[$code];

        $exception_name = '\\DLS\\Healthvault\Platform\Exceptions\\'.implode("",array_map(function($word) { return ucfirst($word); }, explode('_',strtolower($exception_description[1])))).'Exception';

        if(class_exists($exception_name)){

            throw new $exception_name;

        }else{

            throw new \DLS\Healthvault\Platform\Exceptions\HealthvaultException($exception_description[1],$code);

        }
    }
}